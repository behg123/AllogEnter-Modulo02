using Univali.Api.Entities;

namespace Univali.Api.Repositories;

public interface IPublisherRepository
{
////////////////////////////////////////////////////////////////////////////
// Publisher
////////////////////////////////////////////////////////////////////////////
    ///////////////////////////
    // Create
    void AddPublisher(Publisher publisher);

    ///////////////////////////
    // Read
    Task<IEnumerable<Publisher>> GetPublishersAsync();
    Task<Publisher?> GetPublisherByIdAsync(int publisherId);
    Task<Publisher?> GetPublisherWithCoursesByIdAsync(int publisherId);

    ///////////////////////////
    // Remove
    void RemovePublisher(int publisherId);

    ///////////////////////////
    // Utils
    Task<bool> PublisherExistsAsync(int publisherId);

////////////////////////////////////////////////////////////////////////////
// Course
////////////////////////////////////////////////////////////////////////////
    ///////////////////////////
    // Create
    Task<bool> AddCourseAsync(int publisherId, Course course);

    ///////////////////////////
    // Read
    Task<Course?> GetCourseByIdAsync(int courseId);
    Task<Course?> GetCourseWithAuthorsByIdAsync(int courseId);
    Task<IEnumerable<Course>> GetCoursesAsync();
    Task<IEnumerable<Course>> GetCoursesAsync(string? category, string? searchQuery);
    ///////////////////////////
    // Delete
    void DeleteCourse(int courseId);

////////////////////////////////////////////////////////////////////////////
// Author
////////////////////////////////////////////////////////////////////////////
    ///////////////////////////
    // Create
    void AddAuthor(Author author);
    
    ///////////////////////////
    // Read
    Task<Author?> GetAuthorByIdAsync(int authorId);
    Task<List<Author>> GetAuthorsById(IEnumerable<int> authorIds);
    Task<Author?> GetAuthorWithCoursesByIdAsync(int authorId);

    ///////////////////////////
    // Delete
    void DeleteAuthor(Author author);

////////////////////////////////////////////////////////////////////////////
// Save Changes
//////////////////////////////////////////////////////////////////////////// 
    Task<bool> SaveChangesAsync();
}